package de.coaster.commands;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

import de.coaster.commands.types.ServerCommand;
import net.dv8tion.jda.api.entities.Member;
import net.dv8tion.jda.api.entities.Message;
import net.dv8tion.jda.api.entities.TextChannel;

public class SatzCommand implements ServerCommand{
    private static Random rand = new Random();
    private static Scanner input = new Scanner(System.in);
    /*List<String> words = new ArrayList<>();
    List<String> names = new ArrayList<>();
    List<String> nomen = new ArrayList<>();
    List<DataHelpersatz> sentences = new ArrayList<>();*/
	@Override
	public void performCommand(Member m, TextChannel channel, Message message) {
		/*createlists();
        
		String[] args = message.getContentDisplay().split(" ");
		if(args.length==2) {
			if(args[1].equals("wort")) {
		        
		        channel.sendMessage(getrandom("wort")).queue();
			}
			if(args[1].equals("name")) {
				channel.sendMessage(getrandom("name")).queue();
			}
			if(args[1].equals("nomen")) {
				channel.sendMessage(getrandom("nomen")).queue();
			}
		}
		if(args.length==1) {
			//createsentence(m,channel,message);
		}  
    }
	
	
	
	public void createsentence(Member m, TextChannel channel, Message message) {
		List<String> words = new ArrayList<>();
		int r =rand.nextInt(sentences.size());
		words = sentences.get(r).words;
		String satz = "";
		for (int i = 0;i< words.size();i++) {
			satz = satz + getrandom(words.get(i));
		}
		channel.sendMessage(satz).queue();
	}
	public void createlists() {
		//createwordlist();
		createnamelist();
		createnomenlist();
		//createlistz();
	}
	public void createwordlist() {
		words.clear();
		String fileName = "D://Games//Wörter/worter.txt";
        File wordList = new File(fileName);
        
        Scanner reader = null;

        try {
            reader = new Scanner(wordList);
        } catch (FileNotFoundException e) {
            System.out.println("file \"" + fileName + "\" not found");
            System.exit(0);
        }

        while(reader.hasNextLine()) {
            String word = reader.nextLine();
            words.add(word);
        }
	}
	public void createnamelist() {
		names.clear();
		String fileName = "D://Games//Wörter/namen.txt";
        File wordList = new File(fileName);
        
        Scanner reader = null;

        try {
            reader = new Scanner(wordList);
        } catch (FileNotFoundException e) {
            System.out.println("file \"" + fileName + "\" not found");
            System.exit(0);
        }

        while(reader.hasNextLine()) {
            String word = reader.nextLine();
            names.add(word);
        }
	}
	public void createnomenlist() {
		nomen.clear();
		String fileName = "D://Games//Wörter/nomen.txt";
        File wordList = new File(fileName);
        
        Scanner reader = null;

        try {
            reader = new Scanner(wordList);
        } catch (FileNotFoundException e) {
            System.out.println("file \"" + fileName + "\" not found");
            System.exit(0);
        }

        while(reader.hasNextLine()) {
            String word = reader.nextLine();
            nomen.add(word);
        }
	}
	
	public String getrandom(String type) {
		List<String> lists = new ArrayList<>();
		if(type.equals("wort")) {
			lists = words;
		}
		if(type.equals("name")) {
			lists = names;
		}
		if(type.equals("nomen")) {
			lists = nomen;
		}
		int position = rand.nextInt(lists.size());
		return lists.get(position);
	}
	public void createlistz() {
		sentences.clear();
		String[] words = new String[]{"nomen","name"};
		createlist(words);
	}
	public void createlist(String[] words) {
		List<String> wordz = new ArrayList<>();
		for(int i= 0; i< words.length;i++) {
			wordz.add(words[i]);
		}
		createElement(wordz);
	}
	public void createElement(List<String> list) {

		DataHelpersatz dataHelpersatz = new DataHelpersatz();
		dataHelpersatz.words = list;

		sentences.add(dataHelpersatz);*/
	}
	
	@Override
	public void performtext(Member m, TextChannel channel, String textmessage, Message message) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void stop() {
		
	}

}
class DataHelpersatz{
	List<String> words = new ArrayList<>();
	
}
